@page "/projets/"
@using Portfolio.Components.Header
@using Portfolio.Components.Footer
@using Portfolio.Shared
@using Portfolio.Project
@inject HttpClient Http

<PageTitle>Eliott Barker - Projets</PageTitle>
<Header CurrentPage=Tabs.Projects />

<div class="projects">
    @if (projects.Count == 0)
    {
        <p>Aucun projet trouv√©.</p>
    }
    else
    {
        @foreach (Project project in projects)
        {
            <div class="project">
                <div class="photo">
                    <img src=@project.Image alt=@project.Title />
                </div>
                <div class="content">
                    <h3><a href=@project.Link>@project.Title</a></h3>
                    <h4>@Project.ProjectTypeToString(@project.Type)</h4>
                    <h5>@project.StartDate - @project.EndDate</h5>
                    <p>
                        @project.Description
                    </p>
                </div>
            </div>
        }
    }
</div>

<Footer />

@code {
    List<Project> projects = new List<Project>();

    protected override async Task OnInitializedAsync()
    {
        string path = "data/AllProjects.xml";
        try
        {
            string xmlContent = await Http.GetStringAsync(path);
            projects = Project.LoadProjects(xmlContent);
        }
        catch (Exception ex)
        {
            throw new Exception("Erreur lors du chargement des projets", ex);
        }
    }
}
