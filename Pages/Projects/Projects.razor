@page "/projets/"
@using Portfolio.Components
@using Portfolio.Shared
@using Portfolio.Project
@using System.Xml
@inject HttpClient Http

<PageTitle>Eliott Barker - Projets</PageTitle>
<Header CurrentPage=Tabs.Projects />

<div class="projects">
    <div class="project">
        @* <div class="photo">
            <img src="assets/projects/terminal-des-devs/logo_tdd.png" alt="Terminal des devs"/>
        </div>
        <div class="content">
            <h3><a href="/projets/terminal-des-devs">Terminal des devs</a></h3>
            <h4>Projet personnel</h4>
            <h5>2021-actuel</h5>
            <p>
                Communauté
            </p>
        </div> *@

        @if (projects.Count == 0)
        {
            <p>Aucun projet trouvé.</p>
        }
        else
        {
            @foreach (Project project in projects)
            {
                <div class="photo">
                    <img src=@project.Image alt=@project.Title />
                </div>
                <div class="content">
                    <h3><a href=project.Link>@project.Title</a></h3>
                    <h4>@Project.ProjectTypeToString(@project.Type)</h4>
                    <h5>@project.StartDate - @project.EndDate</h5>
                    <p>
                        @project.Description
                    </p>
                </div>
            }
        }
    </div>
</div>

<Footer />

@code {
    List<Project> projects = new List<Project>();

    protected override async Task OnInitializedAsync()
    {
        projects = await LoadProjects();
    }
        
    public async Task<List<Project>> LoadProjects()
    {
        List<Project> projects = new List<Project>();

        string path = "data/AllProjects.xml";
        try
        {
            string xmlContent = await Http.GetStringAsync(path);
            XmlDocument xmlDoc = new XmlDocument();
            xmlDoc.LoadXml(xmlContent);
            XmlNodeList projectsList = xmlDoc.GetElementsByTagName("project");
            if (projectsList.Count == 0)
            {
                throw new FileNotFoundException("Aucun projet trouvé dans le fichier", path);
            }
            foreach (XmlNode project in projectsList)
            {
                XmlNode? title = project.SelectSingleNode("name");
                XmlNode? image = project.SelectSingleNode("image");
                XmlNode? description = project.SelectSingleNode("description");
                XmlNode? page = project.SelectSingleNode("page");
                XmlNode? type = project.SelectSingleNode("type");
                XmlNode? startDate = project.SelectSingleNode("date-start");
                XmlNode? endDate = project.SelectSingleNode("date-end");
                if (title == null || image == null || description == null || page == null || type == null || startDate == null || endDate == null)
                {
                    throw new XmlException("Erreur de formatage du fichier XML");
                }
                projects.Add(new Project
                {
                    Title = title.InnerText,
                    Image = image.InnerText,
                    Description = description.InnerText,
                    Link = page.InnerText,
                    Type = Project.StringToProjectType(type.InnerText),
                    StartDate = startDate.InnerText,
                    EndDate = endDate.InnerText
                });
            }
        }
        catch (XmlException ex)
        {
            throw new Exception("Erreur lors du chargement des projets : erreur de formatage du fichier XML", ex);
        }
        catch (Exception ex)
        {
            throw new Exception("Erreur lors du chargement des projets", ex);
        }

        return projects;
    }

}
